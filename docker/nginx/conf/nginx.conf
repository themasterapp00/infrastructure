limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=keycloak_limit:10m rate=35r/s;  # Dedicat
limit_conn_zone $binary_remote_addr zone=connlimit:10m;

server {
   listen 80;
   listen [::]:80;
   server_name masterapp.click www.masterapp.click;
   server_tokens off;
   root /var/www/html;

   location /.well-known/acme-challenge {
       allow all;
       index  index.html index.htm;
       try_files $uri /index.html;
   }

   location / {
       return 301 https://$host$request_uri;
   }
}

upstream keycloak_server {
    server keycloak:7080;
    keepalive 8;
}

upstream backend_server {
    server backend:1889;
    keepalive 8;
}

upstream frontend {
    server frontend:80;
    keepalive 8;
}

# server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    server_name masterapp.click;
#    server_tokens off;
#
#    ssl_certificate /etc/letsencrypt/live/masterapp.click/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/masterapp.click/privkey.pem;
#
#    # Redirect all HTTPS non-www traffic to www
#    return 301 https://www.masterapp.click$request_uri;
# }

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.masterapp.click masterapp.click;

#     client_max_body_size 10m; # Example: 10MB limit, adjust as needed
#
    ssl_certificate /etc/letsencrypt/live/masterapp.click/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/masterapp.click/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
#     # Generate with: sudo openssl dhparam -out /etc/nginx/dhparam.pem 2048 (or 4096)
#     # Ensure this path is correct and the file exists.
#     # TODO enable it when nginx config dockerized
#     # ssl_dhparam /etc/nginx/dhparam.pem;
#
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     # Use fullchain.pem as it includes intermediate certificates needed for OCSP validation
#     ssl_trusted_certificate /etc/letsencrypt/live/masterapp.click/fullchain.pem;
#
#     # Security Headers
#     #   !! IMPORTANT preload parameter of header below has been added once and they say this is irrevesable (for 2 years as . It means when any content is served by HTTP it wont work and needs to be served by HTTPS
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains;" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     # IMPORTANT: Customize Content-Security-Policy for your application.
#     # This is a basic policy and might break things. Test thoroughly!
#     # Example: default-src 'self'; script-src 'self' https://trusted.cdn.com; style-src 'self' https://fonts.googleapis.com; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com; object-src 'none';
#     # Base the most restrictive:         add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://trusted-cdn.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https://trusted-images.com; font-src 'self' https://fonts.gstatic.com; object-src 'none';" always;
#     add_header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' https://masterapp.click https://www.masterapp.click; frame-src 'self'; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; manifest-src 'self';" always;
#
#
#     add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
#
#     # Deny access to hidden files
#     location ~ /\. {
#        deny all;
#     }

    location /keycloak/ {
        limit_req zone=keycloak_limit burst=25 nodelay;
        limit_conn connlimit 20;
        proxy_pass http://keycloak_server/keycloak/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn connlimit 5;
        proxy_pass http://backend_server/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {

        if ($args !~ "v=") {
            rewrite ^(.*)$ $1?v=$time_iso8601 last;
        }

        proxy_pass http://frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
